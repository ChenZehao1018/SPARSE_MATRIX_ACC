// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sort_C_sort_C_Pipeline_loop_diff_window_loop_diff_pe (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifoMatrixCIdx_i_1_V_dout,
        fifoMatrixCIdx_i_1_V_empty_n,
        fifoMatrixCIdx_i_1_V_read,
        fifoCalcMatrixC_i_1_V_dout,
        fifoCalcMatrixC_i_1_V_empty_n,
        fifoCalcMatrixC_i_1_V_read,
        zext_ln143_1,
        fifoMatrixCIdx_i_0_V_dout,
        fifoMatrixCIdx_i_0_V_empty_n,
        fifoMatrixCIdx_i_0_V_read,
        fifoCalcMatrixC_i_0_V_dout,
        fifoCalcMatrixC_i_0_V_empty_n,
        fifoCalcMatrixC_i_0_V_read,
        matrixC_buffer_V_address0,
        matrixC_buffer_V_ce0,
        matrixC_buffer_V_we0,
        matrixC_buffer_V_d0,
        matrixC_buffer_V_address1,
        matrixC_buffer_V_ce1,
        matrixC_buffer_V_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] fifoMatrixCIdx_i_1_V_dout;
input   fifoMatrixCIdx_i_1_V_empty_n;
output   fifoMatrixCIdx_i_1_V_read;
input  [31:0] fifoCalcMatrixC_i_1_V_dout;
input   fifoCalcMatrixC_i_1_V_empty_n;
output   fifoCalcMatrixC_i_1_V_read;
input  [33:0] zext_ln143_1;
input  [15:0] fifoMatrixCIdx_i_0_V_dout;
input   fifoMatrixCIdx_i_0_V_empty_n;
output   fifoMatrixCIdx_i_0_V_read;
input  [31:0] fifoCalcMatrixC_i_0_V_dout;
input   fifoCalcMatrixC_i_0_V_empty_n;
output   fifoCalcMatrixC_i_0_V_read;
output  [3:0] matrixC_buffer_V_address0;
output   matrixC_buffer_V_ce0;
output   matrixC_buffer_V_we0;
output  [31:0] matrixC_buffer_V_d0;
output  [3:0] matrixC_buffer_V_address1;
output   matrixC_buffer_V_ce1;
input  [31:0] matrixC_buffer_V_q1;

reg ap_idle;
reg fifoMatrixCIdx_i_1_V_read;
reg fifoCalcMatrixC_i_1_V_read;
reg fifoMatrixCIdx_i_0_V_read;
reg fifoCalcMatrixC_i_0_V_read;
reg[3:0] matrixC_buffer_V_address0;
reg matrixC_buffer_V_ce0;
reg matrixC_buffer_V_we0;
reg[31:0] matrixC_buffer_V_d0;
reg[3:0] matrixC_buffer_V_address1;
reg matrixC_buffer_V_ce1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln148_fu_157_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifoMatrixCIdx_i_1_V_blk_n;
wire    ap_block_pp0_stage1;
reg    fifoCalcMatrixC_i_1_V_blk_n;
reg    fifoMatrixCIdx_i_0_V_blk_n;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln148_reg_710;
reg    fifoCalcMatrixC_i_0_V_blk_n;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] fifoCalcMatrixC_i_0_V_read_reg_714;
wire   [31:0] bitcast_ln145_fu_173_p1;
wire   [0:0] tmp_5_fu_178_p3;
reg   [0:0] tmp_5_reg_724;
reg   [3:0] matrixC_buffer_V_addr_reg_728;
wire   [53:0] select_ln579_fu_243_p3;
reg   [53:0] select_ln579_reg_734;
wire   [0:0] icmp_ln580_fu_251_p2;
reg   [0:0] icmp_ln580_reg_739;
wire  signed [31:0] sext_ln591_fu_289_p1;
reg  signed [31:0] sext_ln591_reg_744;
wire   [0:0] icmp_ln594_fu_303_p2;
reg   [0:0] icmp_ln594_reg_749;
wire   [31:0] select_ln591_fu_351_p3;
reg   [31:0] select_ln591_reg_754;
wire   [0:0] and_ln590_fu_371_p2;
reg   [0:0] and_ln590_reg_759;
reg   [31:0] fifoCalcMatrixC_i_1_V_read_reg_764;
wire   [31:0] bitcast_ln145_1_fu_377_p1;
wire   [0:0] tmp_9_fu_382_p3;
reg   [0:0] tmp_9_reg_774;
wire   [3:0] trunc_ln120_fu_390_p1;
reg   [3:0] trunc_ln120_reg_778;
wire   [53:0] select_ln579_1_fu_500_p3;
reg   [53:0] select_ln579_1_reg_783;
wire   [0:0] icmp_ln580_1_fu_508_p2;
reg   [0:0] icmp_ln580_1_reg_788;
wire  signed [31:0] sext_ln591_1_fu_546_p1;
reg  signed [31:0] sext_ln591_1_reg_793;
wire   [0:0] icmp_ln594_1_fu_560_p2;
reg   [0:0] icmp_ln594_1_reg_798;
wire   [31:0] select_ln591_1_fu_608_p3;
reg   [31:0] select_ln591_1_reg_803;
wire   [0:0] and_ln590_1_fu_628_p2;
reg   [0:0] and_ln590_1_reg_808;
reg   [3:0] matrixC_buffer_V_addr_1_reg_813;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln573_fu_186_p1;
wire   [63:0] zext_ln120_fu_639_p1;
reg   [33:0] indvar_flatten_fu_88;
wire   [33:0] add_ln148_fu_162_p2;
wire    ap_loop_init;
wire   [31:0] add_ln712_fu_441_p2;
wire   [31:0] add_ln712_1_fu_691_p2;
reg   [31:0] grp_fu_146_p0;
wire   [63:0] grp_fu_146_p1;
wire   [63:0] bitcast_ln709_fu_191_p1;
wire   [10:0] p_Result_4_fu_207_p4;
wire   [51:0] trunc_ln574_fu_221_p1;
wire   [52:0] tmp_fu_225_p3;
wire   [53:0] zext_ln578_fu_233_p1;
wire   [0:0] tmp_1_fu_199_p3;
wire   [53:0] sub_ln494_fu_237_p2;
wire   [62:0] trunc_ln566_fu_195_p1;
wire   [11:0] zext_ln494_fu_217_p1;
wire   [11:0] sub_ln584_fu_257_p2;
wire   [0:0] icmp_ln590_fu_263_p2;
wire   [11:0] add_ln590_fu_269_p2;
wire   [11:0] sub_ln590_fu_275_p2;
wire  signed [11:0] select_ln590_fu_281_p3;
wire   [6:0] tmp_4_fu_309_p4;
wire   [31:0] trunc_ln592_fu_299_p1;
wire   [0:0] icmp_ln612_fu_319_p2;
wire   [31:0] shl_ln613_fu_325_p2;
wire   [0:0] icmp_ln591_fu_293_p2;
wire   [0:0] xor_ln580_fu_339_p2;
wire   [0:0] and_ln591_fu_345_p2;
wire   [31:0] select_ln612_fu_331_p3;
wire   [0:0] or_ln591_fu_359_p2;
wire   [0:0] xor_ln591_fu_365_p2;
wire   [53:0] zext_ln595_fu_394_p1;
wire   [53:0] ashr_ln595_fu_397_p2;
wire   [0:0] tmp_3_fu_406_p3;
wire   [31:0] trunc_ln595_fu_402_p1;
wire   [31:0] select_ln597_fu_413_p3;
wire   [31:0] select_ln594_fu_421_p3;
wire   [31:0] select_ln590_2_fu_428_p3;
wire   [31:0] select_ln580_fu_434_p3;
wire   [63:0] bitcast_ln709_1_fu_448_p1;
wire   [10:0] p_Result_4_1_fu_464_p4;
wire   [51:0] trunc_ln574_1_fu_478_p1;
wire   [52:0] tmp_2_fu_482_p3;
wire   [53:0] zext_ln578_1_fu_490_p1;
wire   [0:0] tmp_6_fu_456_p3;
wire   [53:0] sub_ln494_1_fu_494_p2;
wire   [62:0] trunc_ln566_1_fu_452_p1;
wire   [11:0] zext_ln494_1_fu_474_p1;
wire   [11:0] sub_ln584_1_fu_514_p2;
wire   [0:0] icmp_ln590_1_fu_520_p2;
wire   [11:0] add_ln590_1_fu_526_p2;
wire   [11:0] sub_ln590_1_fu_532_p2;
wire  signed [11:0] select_ln590_1_fu_538_p3;
wire   [6:0] tmp_8_fu_566_p4;
wire   [31:0] trunc_ln592_1_fu_556_p1;
wire   [0:0] icmp_ln612_1_fu_576_p2;
wire   [31:0] shl_ln613_1_fu_582_p2;
wire   [0:0] icmp_ln591_1_fu_550_p2;
wire   [0:0] xor_ln580_1_fu_596_p2;
wire   [0:0] and_ln591_1_fu_602_p2;
wire   [31:0] select_ln612_1_fu_588_p3;
wire   [0:0] or_ln591_1_fu_616_p2;
wire   [0:0] xor_ln591_1_fu_622_p2;
wire   [3:0] xor_ln120_fu_634_p2;
wire   [53:0] zext_ln595_1_fu_644_p1;
wire   [53:0] ashr_ln595_1_fu_647_p2;
wire   [0:0] tmp_7_fu_656_p3;
wire   [31:0] trunc_ln595_1_fu_652_p1;
wire   [31:0] select_ln597_1_fu_663_p3;
wire   [31:0] select_ln594_1_fu_671_p3;
wire   [31:0] select_ln590_3_fu_678_p3;
wire   [31:0] select_ln580_1_fu_684_p3;
reg    grp_fu_146_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
reg    ap_done_pending_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

sort_C_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_146_p0),
    .ce(grp_fu_146_ce),
    .dout(grp_fu_146_p1)
);

sort_C_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        indvar_flatten_fu_88 <= 34'd0;
    end else if (((icmp_ln148_fu_157_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten_fu_88 <= add_ln148_fu_162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln590_1_reg_808 <= and_ln590_1_fu_628_p2;
        icmp_ln580_1_reg_788 <= icmp_ln580_1_fu_508_p2;
        icmp_ln594_1_reg_798 <= icmp_ln594_1_fu_560_p2;
        select_ln579_1_reg_783 <= select_ln579_1_fu_500_p3;
        select_ln591_1_reg_803 <= select_ln591_1_fu_608_p3;
        sext_ln591_1_reg_793 <= sext_ln591_1_fu_546_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        and_ln590_reg_759 <= and_ln590_fu_371_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        fifoCalcMatrixC_i_1_V_read_reg_764 <= fifoCalcMatrixC_i_1_V_dout;
        icmp_ln148_reg_710 <= icmp_ln148_fu_157_p2;
        icmp_ln580_reg_739 <= icmp_ln580_fu_251_p2;
        icmp_ln594_reg_749 <= icmp_ln594_fu_303_p2;
        select_ln579_reg_734 <= select_ln579_fu_243_p3;
        select_ln591_reg_754 <= select_ln591_fu_351_p3;
        sext_ln591_reg_744 <= sext_ln591_fu_289_p1;
        tmp_9_reg_774 <= fifoMatrixCIdx_i_1_V_dout[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln148_reg_710 == 1'd0))) begin
        fifoCalcMatrixC_i_0_V_read_reg_714 <= fifoCalcMatrixC_i_0_V_dout;
        tmp_5_reg_724 <= fifoMatrixCIdx_i_0_V_dout[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_9_reg_774 == 1'd0))) begin
        matrixC_buffer_V_addr_1_reg_813 <= zext_ln120_fu_639_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_5_fu_178_p3 == 1'd0) & (icmp_ln148_reg_710 == 1'd0))) begin
        matrixC_buffer_V_addr_reg_728 <= zext_ln573_fu_186_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_9_fu_382_p3 == 1'd0))) begin
        trunc_ln120_reg_778 <= trunc_ln120_fu_390_p1;
    end
end

always @ (*) begin
    if (((icmp_ln148_fu_157_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln148_reg_710 == 1'd0))) begin
        fifoCalcMatrixC_i_0_V_blk_n = fifoCalcMatrixC_i_0_V_empty_n;
    end else begin
        fifoCalcMatrixC_i_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln148_reg_710 == 1'd0))) begin
        fifoCalcMatrixC_i_0_V_read = 1'b1;
    end else begin
        fifoCalcMatrixC_i_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        fifoCalcMatrixC_i_1_V_blk_n = fifoCalcMatrixC_i_1_V_empty_n;
    end else begin
        fifoCalcMatrixC_i_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        fifoCalcMatrixC_i_1_V_read = 1'b1;
    end else begin
        fifoCalcMatrixC_i_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln148_reg_710 == 1'd0))) begin
        fifoMatrixCIdx_i_0_V_blk_n = fifoMatrixCIdx_i_0_V_empty_n;
    end else begin
        fifoMatrixCIdx_i_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln148_reg_710 == 1'd0))) begin
        fifoMatrixCIdx_i_0_V_read = 1'b1;
    end else begin
        fifoMatrixCIdx_i_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        fifoMatrixCIdx_i_1_V_blk_n = fifoMatrixCIdx_i_1_V_empty_n;
    end else begin
        fifoMatrixCIdx_i_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        fifoMatrixCIdx_i_1_V_read = 1'b1;
    end else begin
        fifoMatrixCIdx_i_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_146_ce = 1'b1;
    end else begin
        grp_fu_146_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_146_p0 = bitcast_ln145_1_fu_377_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_146_p0 = bitcast_ln145_fu_173_p1;
        end else begin
            grp_fu_146_p0 = 'bx;
        end
    end else begin
        grp_fu_146_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            matrixC_buffer_V_address0 = matrixC_buffer_V_addr_1_reg_813;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            matrixC_buffer_V_address0 = matrixC_buffer_V_addr_reg_728;
        end else begin
            matrixC_buffer_V_address0 = 'bx;
        end
    end else begin
        matrixC_buffer_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matrixC_buffer_V_address1 = zext_ln120_fu_639_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        matrixC_buffer_V_address1 = matrixC_buffer_V_addr_reg_728;
    end else begin
        matrixC_buffer_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        matrixC_buffer_V_ce0 = 1'b1;
    end else begin
        matrixC_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        matrixC_buffer_V_ce1 = 1'b1;
    end else begin
        matrixC_buffer_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            matrixC_buffer_V_d0 = add_ln712_1_fu_691_p2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            matrixC_buffer_V_d0 = add_ln712_fu_441_p2;
        end else begin
            matrixC_buffer_V_d0 = 'bx;
        end
    end else begin
        matrixC_buffer_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_9_reg_774 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_5_reg_724 == 1'd0)))) begin
        matrixC_buffer_V_we0 = 1'b1;
    end else begin
        matrixC_buffer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln148_fu_162_p2 = (indvar_flatten_fu_88 + 34'd1);

assign add_ln590_1_fu_526_p2 = ($signed(sub_ln584_1_fu_514_p2) + $signed(12'd4080));

assign add_ln590_fu_269_p2 = ($signed(sub_ln584_fu_257_p2) + $signed(12'd4080));

assign add_ln712_1_fu_691_p2 = (matrixC_buffer_V_q1 + select_ln580_1_fu_684_p3);

assign add_ln712_fu_441_p2 = (matrixC_buffer_V_q1 + select_ln580_fu_434_p3);

assign and_ln590_1_fu_628_p2 = (xor_ln591_1_fu_622_p2 & icmp_ln590_1_fu_520_p2);

assign and_ln590_fu_371_p2 = (xor_ln591_fu_365_p2 & icmp_ln590_fu_263_p2);

assign and_ln591_1_fu_602_p2 = (xor_ln580_1_fu_596_p2 & icmp_ln591_1_fu_550_p2);

assign and_ln591_fu_345_p2 = (xor_ln580_fu_339_p2 & icmp_ln591_fu_293_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fifoCalcMatrixC_i_0_V_empty_n == 1'b0) & (icmp_ln148_reg_710 == 1'd0)) | ((fifoMatrixCIdx_i_0_V_empty_n == 1'b0) & (icmp_ln148_reg_710 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fifoCalcMatrixC_i_0_V_empty_n == 1'b0) & (icmp_ln148_reg_710 == 1'd0)) | ((fifoMatrixCIdx_i_0_V_empty_n == 1'b0) & (icmp_ln148_reg_710 == 1'd0))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((fifoCalcMatrixC_i_1_V_empty_n == 1'b0) | (fifoMatrixCIdx_i_1_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((fifoCalcMatrixC_i_1_V_empty_n == 1'b0) | (fifoMatrixCIdx_i_1_V_empty_n == 1'b0)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((fifoCalcMatrixC_i_0_V_empty_n == 1'b0) & (icmp_ln148_reg_710 == 1'd0)) | ((fifoMatrixCIdx_i_0_V_empty_n == 1'b0) & (icmp_ln148_reg_710 == 1'd0)));
end

always @ (*) begin
    ap_block_state4_pp0_stage1_iter1 = ((fifoCalcMatrixC_i_1_V_empty_n == 1'b0) | (fifoMatrixCIdx_i_1_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ashr_ln595_1_fu_647_p2 = $signed(select_ln579_1_reg_783) >>> zext_ln595_1_fu_644_p1;

assign ashr_ln595_fu_397_p2 = $signed(select_ln579_reg_734) >>> zext_ln595_fu_394_p1;

assign bitcast_ln145_1_fu_377_p1 = fifoCalcMatrixC_i_1_V_dout;

assign bitcast_ln145_fu_173_p1 = fifoCalcMatrixC_i_0_V_dout;

assign bitcast_ln709_1_fu_448_p1 = grp_fu_146_p1;

assign bitcast_ln709_fu_191_p1 = grp_fu_146_p1;

assign icmp_ln148_fu_157_p2 = ((indvar_flatten_fu_88 == zext_ln143_1) ? 1'b1 : 1'b0);

assign icmp_ln580_1_fu_508_p2 = ((trunc_ln566_1_fu_452_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_fu_251_p2 = ((trunc_ln566_fu_195_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln590_1_fu_520_p2 = (($signed(sub_ln584_1_fu_514_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_fu_263_p2 = (($signed(sub_ln584_fu_257_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln591_1_fu_550_p2 = ((sub_ln584_1_fu_514_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_293_p2 = ((sub_ln584_fu_257_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln594_1_fu_560_p2 = ((select_ln590_1_fu_538_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_fu_303_p2 = ((select_ln590_fu_281_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln612_1_fu_576_p2 = ((tmp_8_fu_566_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_fu_319_p2 = ((tmp_4_fu_309_p4 == 7'd0) ? 1'b1 : 1'b0);

assign or_ln591_1_fu_616_p2 = (icmp_ln591_1_fu_550_p2 | icmp_ln580_1_fu_508_p2);

assign or_ln591_fu_359_p2 = (icmp_ln591_fu_293_p2 | icmp_ln580_fu_251_p2);

assign p_Result_4_1_fu_464_p4 = {{bitcast_ln709_1_fu_448_p1[62:52]}};

assign p_Result_4_fu_207_p4 = {{bitcast_ln709_fu_191_p1[62:52]}};

assign select_ln579_1_fu_500_p3 = ((tmp_6_fu_456_p3[0:0] == 1'b1) ? sub_ln494_1_fu_494_p2 : zext_ln578_1_fu_490_p1);

assign select_ln579_fu_243_p3 = ((tmp_1_fu_199_p3[0:0] == 1'b1) ? sub_ln494_fu_237_p2 : zext_ln578_fu_233_p1);

assign select_ln580_1_fu_684_p3 = ((icmp_ln580_1_reg_788[0:0] == 1'b1) ? 32'd0 : select_ln590_3_fu_678_p3);

assign select_ln580_fu_434_p3 = ((icmp_ln580_reg_739[0:0] == 1'b1) ? 32'd0 : select_ln590_2_fu_428_p3);

assign select_ln590_1_fu_538_p3 = ((icmp_ln590_1_fu_520_p2[0:0] == 1'b1) ? add_ln590_1_fu_526_p2 : sub_ln590_1_fu_532_p2);

assign select_ln590_2_fu_428_p3 = ((and_ln590_reg_759[0:0] == 1'b1) ? select_ln594_fu_421_p3 : select_ln591_reg_754);

assign select_ln590_3_fu_678_p3 = ((and_ln590_1_reg_808[0:0] == 1'b1) ? select_ln594_1_fu_671_p3 : select_ln591_1_reg_803);

assign select_ln590_fu_281_p3 = ((icmp_ln590_fu_263_p2[0:0] == 1'b1) ? add_ln590_fu_269_p2 : sub_ln590_fu_275_p2);

assign select_ln591_1_fu_608_p3 = ((and_ln591_1_fu_602_p2[0:0] == 1'b1) ? trunc_ln592_1_fu_556_p1 : select_ln612_1_fu_588_p3);

assign select_ln591_fu_351_p3 = ((and_ln591_fu_345_p2[0:0] == 1'b1) ? trunc_ln592_fu_299_p1 : select_ln612_fu_331_p3);

assign select_ln594_1_fu_671_p3 = ((icmp_ln594_1_reg_798[0:0] == 1'b1) ? trunc_ln595_1_fu_652_p1 : select_ln597_1_fu_663_p3);

assign select_ln594_fu_421_p3 = ((icmp_ln594_reg_749[0:0] == 1'b1) ? trunc_ln595_fu_402_p1 : select_ln597_fu_413_p3);

assign select_ln597_1_fu_663_p3 = ((tmp_7_fu_656_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_fu_413_p3 = ((tmp_3_fu_406_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln612_1_fu_588_p3 = ((icmp_ln612_1_fu_576_p2[0:0] == 1'b1) ? shl_ln613_1_fu_582_p2 : 32'd0);

assign select_ln612_fu_331_p3 = ((icmp_ln612_fu_319_p2[0:0] == 1'b1) ? shl_ln613_fu_325_p2 : 32'd0);

assign sext_ln591_1_fu_546_p1 = select_ln590_1_fu_538_p3;

assign sext_ln591_fu_289_p1 = select_ln590_fu_281_p3;

assign shl_ln613_1_fu_582_p2 = trunc_ln592_1_fu_556_p1 << sext_ln591_1_fu_546_p1;

assign shl_ln613_fu_325_p2 = trunc_ln592_fu_299_p1 << sext_ln591_fu_289_p1;

assign sub_ln494_1_fu_494_p2 = (54'd0 - zext_ln578_1_fu_490_p1);

assign sub_ln494_fu_237_p2 = (54'd0 - zext_ln578_fu_233_p1);

assign sub_ln584_1_fu_514_p2 = (12'd1075 - zext_ln494_1_fu_474_p1);

assign sub_ln584_fu_257_p2 = (12'd1075 - zext_ln494_fu_217_p1);

assign sub_ln590_1_fu_532_p2 = (12'd16 - sub_ln584_1_fu_514_p2);

assign sub_ln590_fu_275_p2 = (12'd16 - sub_ln584_fu_257_p2);

assign tmp_1_fu_199_p3 = bitcast_ln709_fu_191_p1[32'd63];

assign tmp_2_fu_482_p3 = {{1'd1}, {trunc_ln574_1_fu_478_p1}};

assign tmp_3_fu_406_p3 = fifoCalcMatrixC_i_0_V_read_reg_714[32'd31];

assign tmp_4_fu_309_p4 = {{select_ln590_fu_281_p3[11:5]}};

assign tmp_5_fu_178_p3 = fifoMatrixCIdx_i_0_V_dout[32'd15];

assign tmp_6_fu_456_p3 = bitcast_ln709_1_fu_448_p1[32'd63];

assign tmp_7_fu_656_p3 = fifoCalcMatrixC_i_1_V_read_reg_764[32'd31];

assign tmp_8_fu_566_p4 = {{select_ln590_1_fu_538_p3[11:5]}};

assign tmp_9_fu_382_p3 = fifoMatrixCIdx_i_1_V_dout[32'd15];

assign tmp_fu_225_p3 = {{1'd1}, {trunc_ln574_fu_221_p1}};

assign trunc_ln120_fu_390_p1 = fifoMatrixCIdx_i_1_V_dout[3:0];

assign trunc_ln566_1_fu_452_p1 = bitcast_ln709_1_fu_448_p1[62:0];

assign trunc_ln566_fu_195_p1 = bitcast_ln709_fu_191_p1[62:0];

assign trunc_ln574_1_fu_478_p1 = bitcast_ln709_1_fu_448_p1[51:0];

assign trunc_ln574_fu_221_p1 = bitcast_ln709_fu_191_p1[51:0];

assign trunc_ln592_1_fu_556_p1 = select_ln579_1_fu_500_p3[31:0];

assign trunc_ln592_fu_299_p1 = select_ln579_fu_243_p3[31:0];

assign trunc_ln595_1_fu_652_p1 = ashr_ln595_1_fu_647_p2[31:0];

assign trunc_ln595_fu_402_p1 = ashr_ln595_fu_397_p2[31:0];

assign xor_ln120_fu_634_p2 = (trunc_ln120_reg_778 ^ 4'd8);

assign xor_ln580_1_fu_596_p2 = (icmp_ln580_1_fu_508_p2 ^ 1'd1);

assign xor_ln580_fu_339_p2 = (icmp_ln580_fu_251_p2 ^ 1'd1);

assign xor_ln591_1_fu_622_p2 = (or_ln591_1_fu_616_p2 ^ 1'd1);

assign xor_ln591_fu_365_p2 = (or_ln591_fu_359_p2 ^ 1'd1);

assign zext_ln120_fu_639_p1 = xor_ln120_fu_634_p2;

assign zext_ln494_1_fu_474_p1 = p_Result_4_1_fu_464_p4;

assign zext_ln494_fu_217_p1 = p_Result_4_fu_207_p4;

assign zext_ln573_fu_186_p1 = fifoMatrixCIdx_i_0_V_dout;

assign zext_ln578_1_fu_490_p1 = tmp_2_fu_482_p3;

assign zext_ln578_fu_233_p1 = tmp_fu_225_p3;

assign zext_ln595_1_fu_644_p1 = $unsigned(sext_ln591_1_reg_793);

assign zext_ln595_fu_394_p1 = $unsigned(sext_ln591_reg_744);

endmodule //sort_C_sort_C_Pipeline_loop_diff_window_loop_diff_pe
