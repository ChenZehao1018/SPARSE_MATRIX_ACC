// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module calc_C_calc_C_Pipeline_loop_diff_window_loop_diff_pe (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifoMatrixA_i_V_dout,
        fifoMatrixA_i_V_empty_n,
        fifoMatrixA_i_V_read,
        fifoMatrixAIdx_i_V_dout,
        fifoMatrixAIdx_i_V_empty_n,
        fifoMatrixAIdx_i_V_read,
        fifoCalcMatrixC_o_0_V_din,
        fifoCalcMatrixC_o_0_V_full_n,
        fifoCalcMatrixC_o_0_V_write,
        fifoMatrixCIdx_o_0_V_din,
        fifoMatrixCIdx_o_0_V_full_n,
        fifoMatrixCIdx_o_0_V_write,
        fifoCalcMatrixC_o_1_V_din,
        fifoCalcMatrixC_o_1_V_full_n,
        fifoCalcMatrixC_o_1_V_write,
        fifoMatrixCIdx_o_1_V_din,
        fifoMatrixCIdx_o_1_V_full_n,
        fifoMatrixCIdx_o_1_V_write,
        zext_ln81,
        matrixB_buffer_address0,
        matrixB_buffer_ce0,
        matrixB_buffer_q0,
        matrixB_buffer_address1,
        matrixB_buffer_ce1,
        matrixB_buffer_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] fifoMatrixA_i_V_dout;
input   fifoMatrixA_i_V_empty_n;
output   fifoMatrixA_i_V_read;
input  [31:0] fifoMatrixAIdx_i_V_dout;
input   fifoMatrixAIdx_i_V_empty_n;
output   fifoMatrixAIdx_i_V_read;
output  [31:0] fifoCalcMatrixC_o_0_V_din;
input   fifoCalcMatrixC_o_0_V_full_n;
output   fifoCalcMatrixC_o_0_V_write;
output  [15:0] fifoMatrixCIdx_o_0_V_din;
input   fifoMatrixCIdx_o_0_V_full_n;
output   fifoMatrixCIdx_o_0_V_write;
output  [31:0] fifoCalcMatrixC_o_1_V_din;
input   fifoCalcMatrixC_o_1_V_full_n;
output   fifoCalcMatrixC_o_1_V_write;
output  [15:0] fifoMatrixCIdx_o_1_V_din;
input   fifoMatrixCIdx_o_1_V_full_n;
output   fifoMatrixCIdx_o_1_V_write;
input  [33:0] zext_ln81;
output  [3:0] matrixB_buffer_address0;
output   matrixB_buffer_ce0;
input  [31:0] matrixB_buffer_q0;
output  [3:0] matrixB_buffer_address1;
output   matrixB_buffer_ce1;
input  [31:0] matrixB_buffer_q1;

reg ap_idle;
reg fifoMatrixA_i_V_read;
reg fifoMatrixAIdx_i_V_read;
reg fifoCalcMatrixC_o_0_V_write;
reg fifoMatrixCIdx_o_0_V_write;
reg fifoCalcMatrixC_o_1_V_write;
reg fifoMatrixCIdx_o_1_V_write;
reg matrixB_buffer_ce0;
reg matrixB_buffer_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
reg   [0:0] tmp_reg_259;
reg   [0:0] tmp_reg_259_pp0_iter6_reg;
reg    ap_block_state8_pp0_stage0_iter7;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln90_fu_155_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifoMatrixA_i_V_blk_n;
wire    ap_block_pp0_stage0;
reg    fifoMatrixAIdx_i_V_blk_n;
reg    fifoCalcMatrixC_o_0_V_blk_n;
reg    fifoMatrixCIdx_o_0_V_blk_n;
reg    fifoCalcMatrixC_o_1_V_blk_n;
reg    fifoMatrixCIdx_o_1_V_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] tmp_1_fu_171_p1;
reg   [31:0] tmp_1_reg_247;
reg   [31:0] tmp_1_reg_247_pp0_iter3_reg;
wire   [15:0] tempA_row_V_fu_185_p1;
reg   [15:0] tempA_row_V_reg_253;
reg   [15:0] tempA_row_V_reg_253_pp0_iter3_reg;
reg   [15:0] tempA_row_V_reg_253_pp0_iter4_reg;
reg   [15:0] tempA_row_V_reg_253_pp0_iter5_reg;
reg   [15:0] tempA_row_V_reg_253_pp0_iter6_reg;
reg   [0:0] tmp_reg_259_pp0_iter3_reg;
reg   [0:0] tmp_reg_259_pp0_iter4_reg;
reg   [0:0] tmp_reg_259_pp0_iter5_reg;
reg   [31:0] matrixB_buffer_load_reg_273;
reg   [31:0] matrixB_buffer_load_1_reg_278;
wire   [31:0] grp_fu_139_p2;
reg   [31:0] temp_res_reg_283;
wire   [31:0] grp_fu_143_p2;
reg   [31:0] temp_res_1_reg_288;
wire   [63:0] conv_i_i_fu_197_p1;
wire   [63:0] zext_ln51_fu_218_p1;
reg   [33:0] indvar_flatten_fu_64;
wire   [33:0] add_ln90_fu_160_p2;
wire    ap_loop_init;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] tempA_col_V_fu_175_p4;
wire   [3:0] colIdxA_i_V_cast_fu_202_p4;
wire   [3:0] xor_ln51_fu_212_p2;
reg    grp_fu_139_ce;
reg    grp_fu_143_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_done_reg = 1'b0;
end

calc_C_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_reg_247_pp0_iter3_reg),
    .din1(matrixB_buffer_load_reg_273),
    .ce(grp_fu_139_ce),
    .dout(grp_fu_139_p2)
);

calc_C_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_reg_247_pp0_iter3_reg),
    .din1(matrixB_buffer_load_1_reg_278),
    .ce(grp_fu_143_ce),
    .dout(grp_fu_143_p2)
);

calc_C_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_64 <= 34'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln90_fu_155_p2 == 1'd0))) begin
            indvar_flatten_fu_64 <= add_ln90_fu_160_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        tempA_row_V_reg_253 <= tempA_row_V_fu_185_p1;
        tempA_row_V_reg_253_pp0_iter3_reg <= tempA_row_V_reg_253;
        tempA_row_V_reg_253_pp0_iter4_reg <= tempA_row_V_reg_253_pp0_iter3_reg;
        tempA_row_V_reg_253_pp0_iter5_reg <= tempA_row_V_reg_253_pp0_iter4_reg;
        tempA_row_V_reg_253_pp0_iter6_reg <= tempA_row_V_reg_253_pp0_iter5_reg;
        tmp_1_reg_247 <= tmp_1_fu_171_p1;
        tmp_1_reg_247_pp0_iter3_reg <= tmp_1_reg_247;
        tmp_reg_259 <= fifoMatrixAIdx_i_V_dout[32'd15];
        tmp_reg_259_pp0_iter3_reg <= tmp_reg_259;
        tmp_reg_259_pp0_iter4_reg <= tmp_reg_259_pp0_iter3_reg;
        tmp_reg_259_pp0_iter5_reg <= tmp_reg_259_pp0_iter4_reg;
        tmp_reg_259_pp0_iter6_reg <= tmp_reg_259_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_259 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        matrixB_buffer_load_1_reg_278 <= matrixB_buffer_q0;
        matrixB_buffer_load_reg_273 <= matrixB_buffer_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_259_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_res_1_reg_288 <= grp_fu_143_p2;
        temp_res_reg_283 <= grp_fu_139_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln90_fu_155_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_259_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        fifoCalcMatrixC_o_0_V_blk_n = fifoCalcMatrixC_o_0_V_full_n;
    end else begin
        fifoCalcMatrixC_o_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_reg_259_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifoCalcMatrixC_o_0_V_write = 1'b1;
    end else begin
        fifoCalcMatrixC_o_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_259_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        fifoCalcMatrixC_o_1_V_blk_n = fifoCalcMatrixC_o_1_V_full_n;
    end else begin
        fifoCalcMatrixC_o_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_reg_259_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifoCalcMatrixC_o_1_V_write = 1'b1;
    end else begin
        fifoCalcMatrixC_o_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        fifoMatrixAIdx_i_V_blk_n = fifoMatrixAIdx_i_V_empty_n;
    end else begin
        fifoMatrixAIdx_i_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifoMatrixAIdx_i_V_read = 1'b1;
    end else begin
        fifoMatrixAIdx_i_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        fifoMatrixA_i_V_blk_n = fifoMatrixA_i_V_empty_n;
    end else begin
        fifoMatrixA_i_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifoMatrixA_i_V_read = 1'b1;
    end else begin
        fifoMatrixA_i_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_259_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        fifoMatrixCIdx_o_0_V_blk_n = fifoMatrixCIdx_o_0_V_full_n;
    end else begin
        fifoMatrixCIdx_o_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_reg_259_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifoMatrixCIdx_o_0_V_write = 1'b1;
    end else begin
        fifoMatrixCIdx_o_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_259_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        fifoMatrixCIdx_o_1_V_blk_n = fifoMatrixCIdx_o_1_V_full_n;
    end else begin
        fifoMatrixCIdx_o_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_reg_259_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifoMatrixCIdx_o_1_V_write = 1'b1;
    end else begin
        fifoMatrixCIdx_o_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_139_ce = 1'b1;
    end else begin
        grp_fu_139_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_143_ce = 1'b1;
    end else begin
        grp_fu_143_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        matrixB_buffer_ce0 = 1'b1;
    end else begin
        matrixB_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        matrixB_buffer_ce1 = 1'b1;
    end else begin
        matrixB_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln90_fu_160_p2 = (indvar_flatten_fu_64 + 34'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter7 == 1'b1) & (((fifoMatrixCIdx_o_1_V_full_n == 1'b0) & (tmp_reg_259_pp0_iter6_reg == 1'd0)) | ((fifoCalcMatrixC_o_1_V_full_n == 1'b0) & (tmp_reg_259_pp0_iter6_reg == 1'd0)) | ((fifoMatrixCIdx_o_0_V_full_n == 1'b0) & (tmp_reg_259_pp0_iter6_reg == 1'd0)) | ((tmp_reg_259_pp0_iter6_reg == 1'd0) & (fifoCalcMatrixC_o_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((fifoMatrixAIdx_i_V_empty_n == 1'b0) | (fifoMatrixA_i_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter7 == 1'b1) & (((fifoMatrixCIdx_o_1_V_full_n == 1'b0) & (tmp_reg_259_pp0_iter6_reg == 1'd0)) | ((fifoCalcMatrixC_o_1_V_full_n == 1'b0) & (tmp_reg_259_pp0_iter6_reg == 1'd0)) | ((fifoMatrixCIdx_o_0_V_full_n == 1'b0) & (tmp_reg_259_pp0_iter6_reg == 1'd0)) | ((tmp_reg_259_pp0_iter6_reg == 1'd0) & (fifoCalcMatrixC_o_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((fifoMatrixAIdx_i_V_empty_n == 1'b0) | (fifoMatrixA_i_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter7 == 1'b1) & (((fifoMatrixCIdx_o_1_V_full_n == 1'b0) & (tmp_reg_259_pp0_iter6_reg == 1'd0)) | ((fifoCalcMatrixC_o_1_V_full_n == 1'b0) & (tmp_reg_259_pp0_iter6_reg == 1'd0)) | ((fifoMatrixCIdx_o_0_V_full_n == 1'b0) & (tmp_reg_259_pp0_iter6_reg == 1'd0)) | ((tmp_reg_259_pp0_iter6_reg == 1'd0) & (fifoCalcMatrixC_o_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((fifoMatrixAIdx_i_V_empty_n == 1'b0) | (fifoMatrixA_i_V_empty_n == 1'b0))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((fifoMatrixAIdx_i_V_empty_n == 1'b0) | (fifoMatrixA_i_V_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter7 = (((fifoMatrixCIdx_o_1_V_full_n == 1'b0) & (tmp_reg_259_pp0_iter6_reg == 1'd0)) | ((fifoCalcMatrixC_o_1_V_full_n == 1'b0) & (tmp_reg_259_pp0_iter6_reg == 1'd0)) | ((fifoMatrixCIdx_o_0_V_full_n == 1'b0) & (tmp_reg_259_pp0_iter6_reg == 1'd0)) | ((tmp_reg_259_pp0_iter6_reg == 1'd0) & (fifoCalcMatrixC_o_0_V_full_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign colIdxA_i_V_cast_fu_202_p4 = {{fifoMatrixAIdx_i_V_dout[19:16]}};

assign conv_i_i_fu_197_p1 = tempA_col_V_fu_175_p4;

assign fifoCalcMatrixC_o_0_V_din = temp_res_reg_283;

assign fifoCalcMatrixC_o_1_V_din = temp_res_1_reg_288;

assign fifoMatrixCIdx_o_0_V_din = tempA_row_V_reg_253_pp0_iter6_reg;

assign fifoMatrixCIdx_o_1_V_din = tempA_row_V_reg_253_pp0_iter6_reg;

assign icmp_ln90_fu_155_p2 = ((indvar_flatten_fu_64 == zext_ln81) ? 1'b1 : 1'b0);

assign matrixB_buffer_address0 = zext_ln51_fu_218_p1;

assign matrixB_buffer_address1 = conv_i_i_fu_197_p1;

assign tempA_col_V_fu_175_p4 = {{fifoMatrixAIdx_i_V_dout[31:16]}};

assign tempA_row_V_fu_185_p1 = fifoMatrixAIdx_i_V_dout[15:0];

assign tmp_1_fu_171_p1 = fifoMatrixA_i_V_dout;

assign xor_ln51_fu_212_p2 = (colIdxA_i_V_cast_fu_202_p4 ^ 4'd8);

assign zext_ln51_fu_218_p1 = xor_ln51_fu_212_p2;

endmodule //calc_C_calc_C_Pipeline_loop_diff_window_loop_diff_pe
