-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sort_C_sort_C_Pipeline_loop_diff_window_loop_diff_pe is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifoMatrixCIdx_i_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    fifoMatrixCIdx_i_1_V_empty_n : IN STD_LOGIC;
    fifoMatrixCIdx_i_1_V_read : OUT STD_LOGIC;
    fifoCalcMatrixC_i_1_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fifoCalcMatrixC_i_1_V_empty_n : IN STD_LOGIC;
    fifoCalcMatrixC_i_1_V_read : OUT STD_LOGIC;
    zext_ln143_1 : IN STD_LOGIC_VECTOR (33 downto 0);
    fifoMatrixCIdx_i_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    fifoMatrixCIdx_i_0_V_empty_n : IN STD_LOGIC;
    fifoMatrixCIdx_i_0_V_read : OUT STD_LOGIC;
    fifoCalcMatrixC_i_0_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fifoCalcMatrixC_i_0_V_empty_n : IN STD_LOGIC;
    fifoCalcMatrixC_i_0_V_read : OUT STD_LOGIC;
    matrixC_buffer_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    matrixC_buffer_V_ce0 : OUT STD_LOGIC;
    matrixC_buffer_V_we0 : OUT STD_LOGIC;
    matrixC_buffer_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    matrixC_buffer_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    matrixC_buffer_V_ce1 : OUT STD_LOGIC;
    matrixC_buffer_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of sort_C_sort_C_Pipeline_loop_diff_window_loop_diff_pe is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv34_1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal icmp_ln148_fu_157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal fifoMatrixCIdx_i_1_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal fifoCalcMatrixC_i_1_V_blk_n : STD_LOGIC;
    signal fifoMatrixCIdx_i_0_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln148_reg_710 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifoCalcMatrixC_i_0_V_blk_n : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal fifoCalcMatrixC_i_0_V_read_reg_714 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln145_fu_173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_178_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_724 : STD_LOGIC_VECTOR (0 downto 0);
    signal matrixC_buffer_V_addr_reg_728 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln579_fu_243_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln579_reg_734 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln580_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln580_reg_739 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln591_fu_289_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln591_reg_744 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln594_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln594_reg_749 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln591_fu_351_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln591_reg_754 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln590_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln590_reg_759 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifoCalcMatrixC_i_1_V_read_reg_764 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln145_1_fu_377_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_382_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_774 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln120_fu_390_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln120_reg_778 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln579_1_fu_500_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln579_1_reg_783 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln580_1_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln580_1_reg_788 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln591_1_fu_546_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln591_1_reg_793 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln594_1_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln594_1_reg_798 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln591_1_fu_608_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln591_1_reg_803 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln590_1_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln590_1_reg_808 : STD_LOGIC_VECTOR (0 downto 0);
    signal matrixC_buffer_V_addr_1_reg_813 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln573_fu_186_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln120_fu_639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar_flatten_fu_88 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln148_fu_162_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal add_ln712_fu_441_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln712_1_fu_691_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_146_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_146_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln709_fu_191_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_4_fu_207_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln574_fu_221_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_fu_225_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln578_fu_233_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1_fu_199_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln494_fu_237_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln566_fu_195_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln494_fu_217_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln584_fu_257_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln590_fu_263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln590_fu_269_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln590_fu_275_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln590_fu_281_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_309_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln592_fu_299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln612_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln613_fu_325_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln591_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln580_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln591_fu_345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln612_fu_331_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln591_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln591_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln595_fu_394_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln595_fu_397_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_3_fu_406_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln595_fu_402_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln597_fu_413_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln594_fu_421_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln590_2_fu_428_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln580_fu_434_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln709_1_fu_448_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_4_1_fu_464_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln574_1_fu_478_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_2_fu_482_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln578_1_fu_490_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_6_fu_456_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln494_1_fu_494_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln566_1_fu_452_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln494_1_fu_474_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln584_1_fu_514_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln590_1_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln590_1_fu_526_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln590_1_fu_532_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln590_1_fu_538_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_fu_566_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln592_1_fu_556_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln612_1_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln613_1_fu_582_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln591_1_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln580_1_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln591_1_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln612_1_fu_588_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln591_1_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln591_1_fu_622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln120_fu_634_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln595_1_fu_644_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln595_1_fu_647_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_7_fu_656_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln595_1_fu_652_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln597_1_fu_663_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln594_1_fu_671_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln590_3_fu_678_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln580_1_fu_684_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_146_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sort_C_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sort_C_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fpext_32ns_64_2_no_dsp_1_U1 : component sort_C_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_146_p0,
        ce => grp_fu_146_ce,
        dout => grp_fu_146_p1);

    flow_control_loop_pipe_sequential_init_U : component sort_C_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                indvar_flatten_fu_88 <= ap_const_lv34_0;
            elsif (((icmp_ln148_fu_157_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                indvar_flatten_fu_88 <= add_ln148_fu_162_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln590_1_reg_808 <= and_ln590_1_fu_628_p2;
                icmp_ln580_1_reg_788 <= icmp_ln580_1_fu_508_p2;
                icmp_ln594_1_reg_798 <= icmp_ln594_1_fu_560_p2;
                select_ln579_1_reg_783 <= select_ln579_1_fu_500_p3;
                select_ln591_1_reg_803 <= select_ln591_1_fu_608_p3;
                sext_ln591_1_reg_793 <= sext_ln591_1_fu_546_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                and_ln590_reg_759 <= and_ln590_fu_371_p2;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                fifoCalcMatrixC_i_1_V_read_reg_764 <= fifoCalcMatrixC_i_1_V_dout;
                icmp_ln148_reg_710 <= icmp_ln148_fu_157_p2;
                icmp_ln580_reg_739 <= icmp_ln580_fu_251_p2;
                icmp_ln594_reg_749 <= icmp_ln594_fu_303_p2;
                select_ln579_reg_734 <= select_ln579_fu_243_p3;
                select_ln591_reg_754 <= select_ln591_fu_351_p3;
                sext_ln591_reg_744 <= sext_ln591_fu_289_p1;
                tmp_9_reg_774 <= fifoMatrixCIdx_i_1_V_dout(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln148_reg_710 = ap_const_lv1_0))) then
                fifoCalcMatrixC_i_0_V_read_reg_714 <= fifoCalcMatrixC_i_0_V_dout;
                tmp_5_reg_724 <= fifoMatrixCIdx_i_0_V_dout(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_9_reg_774 = ap_const_lv1_0))) then
                matrixC_buffer_V_addr_1_reg_813 <= zext_ln120_fu_639_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_5_fu_178_p3 = ap_const_lv1_0) and (icmp_ln148_reg_710 = ap_const_lv1_0))) then
                matrixC_buffer_V_addr_reg_728 <= zext_ln573_fu_186_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_9_fu_382_p3 = ap_const_lv1_0))) then
                trunc_ln120_reg_778 <= trunc_ln120_fu_390_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to2, ap_done_pending_pp0, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln148_fu_162_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_88) + unsigned(ap_const_lv34_1));
    add_ln590_1_fu_526_p2 <= std_logic_vector(unsigned(sub_ln584_1_fu_514_p2) + unsigned(ap_const_lv12_FF0));
    add_ln590_fu_269_p2 <= std_logic_vector(unsigned(sub_ln584_fu_257_p2) + unsigned(ap_const_lv12_FF0));
    add_ln712_1_fu_691_p2 <= std_logic_vector(unsigned(matrixC_buffer_V_q1) + unsigned(select_ln580_1_fu_684_p3));
    add_ln712_fu_441_p2 <= std_logic_vector(unsigned(matrixC_buffer_V_q1) + unsigned(select_ln580_fu_434_p3));
    and_ln590_1_fu_628_p2 <= (xor_ln591_1_fu_622_p2 and icmp_ln590_1_fu_520_p2);
    and_ln590_fu_371_p2 <= (xor_ln591_fu_365_p2 and icmp_ln590_fu_263_p2);
    and_ln591_1_fu_602_p2 <= (xor_ln580_1_fu_596_p2 and icmp_ln591_1_fu_550_p2);
    and_ln591_fu_345_p2 <= (xor_ln580_fu_339_p2 and icmp_ln591_fu_293_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, fifoMatrixCIdx_i_0_V_empty_n, fifoCalcMatrixC_i_0_V_empty_n, icmp_ln148_reg_710)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((fifoCalcMatrixC_i_0_V_empty_n = ap_const_logic_0) and (icmp_ln148_reg_710 = ap_const_lv1_0)) or ((fifoMatrixCIdx_i_0_V_empty_n = ap_const_logic_0) and (icmp_ln148_reg_710 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, fifoMatrixCIdx_i_0_V_empty_n, fifoCalcMatrixC_i_0_V_empty_n, icmp_ln148_reg_710)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((fifoCalcMatrixC_i_0_V_empty_n = ap_const_logic_0) and (icmp_ln148_reg_710 = ap_const_lv1_0)) or ((fifoMatrixCIdx_i_0_V_empty_n = ap_const_logic_0) and (icmp_ln148_reg_710 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter1, fifoMatrixCIdx_i_1_V_empty_n, fifoCalcMatrixC_i_1_V_empty_n)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((fifoCalcMatrixC_i_1_V_empty_n = ap_const_logic_0) or (fifoMatrixCIdx_i_1_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, fifoMatrixCIdx_i_1_V_empty_n, fifoCalcMatrixC_i_1_V_empty_n)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((fifoCalcMatrixC_i_1_V_empty_n = ap_const_logic_0) or (fifoMatrixCIdx_i_1_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(fifoMatrixCIdx_i_0_V_empty_n, fifoCalcMatrixC_i_0_V_empty_n, icmp_ln148_reg_710)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((fifoCalcMatrixC_i_0_V_empty_n = ap_const_logic_0) and (icmp_ln148_reg_710 = ap_const_lv1_0)) or ((fifoMatrixCIdx_i_0_V_empty_n = ap_const_logic_0) and (icmp_ln148_reg_710 = ap_const_lv1_0)));
    end process;


    ap_block_state4_pp0_stage1_iter1_assign_proc : process(fifoMatrixCIdx_i_1_V_empty_n, fifoCalcMatrixC_i_1_V_empty_n)
    begin
                ap_block_state4_pp0_stage1_iter1 <= ((fifoCalcMatrixC_i_1_V_empty_n = ap_const_logic_0) or (fifoMatrixCIdx_i_1_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, icmp_ln148_fu_157_p2)
    begin
        if (((icmp_ln148_fu_157_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (not(((ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln595_1_fu_647_p2 <= std_logic_vector(shift_right(signed(select_ln579_1_reg_783),to_integer(unsigned('0' & zext_ln595_1_fu_644_p1(31-1 downto 0)))));
    ashr_ln595_fu_397_p2 <= std_logic_vector(shift_right(signed(select_ln579_reg_734),to_integer(unsigned('0' & zext_ln595_fu_394_p1(31-1 downto 0)))));
    bitcast_ln145_1_fu_377_p1 <= fifoCalcMatrixC_i_1_V_dout;
    bitcast_ln145_fu_173_p1 <= fifoCalcMatrixC_i_0_V_dout;
    bitcast_ln709_1_fu_448_p1 <= grp_fu_146_p1;
    bitcast_ln709_fu_191_p1 <= grp_fu_146_p1;

    fifoCalcMatrixC_i_0_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifoCalcMatrixC_i_0_V_empty_n, ap_block_pp0_stage0, icmp_ln148_reg_710)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln148_reg_710 = ap_const_lv1_0))) then 
            fifoCalcMatrixC_i_0_V_blk_n <= fifoCalcMatrixC_i_0_V_empty_n;
        else 
            fifoCalcMatrixC_i_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifoCalcMatrixC_i_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln148_reg_710, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln148_reg_710 = ap_const_lv1_0))) then 
            fifoCalcMatrixC_i_0_V_read <= ap_const_logic_1;
        else 
            fifoCalcMatrixC_i_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fifoCalcMatrixC_i_1_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, fifoCalcMatrixC_i_1_V_empty_n, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            fifoCalcMatrixC_i_1_V_blk_n <= fifoCalcMatrixC_i_1_V_empty_n;
        else 
            fifoCalcMatrixC_i_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifoCalcMatrixC_i_1_V_read_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            fifoCalcMatrixC_i_1_V_read <= ap_const_logic_1;
        else 
            fifoCalcMatrixC_i_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fifoMatrixCIdx_i_0_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifoMatrixCIdx_i_0_V_empty_n, ap_block_pp0_stage0, icmp_ln148_reg_710)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln148_reg_710 = ap_const_lv1_0))) then 
            fifoMatrixCIdx_i_0_V_blk_n <= fifoMatrixCIdx_i_0_V_empty_n;
        else 
            fifoMatrixCIdx_i_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifoMatrixCIdx_i_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln148_reg_710, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln148_reg_710 = ap_const_lv1_0))) then 
            fifoMatrixCIdx_i_0_V_read <= ap_const_logic_1;
        else 
            fifoMatrixCIdx_i_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fifoMatrixCIdx_i_1_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, fifoMatrixCIdx_i_1_V_empty_n, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            fifoMatrixCIdx_i_1_V_blk_n <= fifoMatrixCIdx_i_1_V_empty_n;
        else 
            fifoMatrixCIdx_i_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifoMatrixCIdx_i_1_V_read_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            fifoMatrixCIdx_i_1_V_read <= ap_const_logic_1;
        else 
            fifoMatrixCIdx_i_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_146_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_146_ce <= ap_const_logic_1;
        else 
            grp_fu_146_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_146_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, bitcast_ln145_fu_173_p1, bitcast_ln145_1_fu_377_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_146_p0 <= bitcast_ln145_1_fu_377_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_146_p0 <= bitcast_ln145_fu_173_p1;
            else 
                grp_fu_146_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_146_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln148_fu_157_p2 <= "1" when (indvar_flatten_fu_88 = zext_ln143_1) else "0";
    icmp_ln580_1_fu_508_p2 <= "1" when (trunc_ln566_1_fu_452_p1 = ap_const_lv63_0) else "0";
    icmp_ln580_fu_251_p2 <= "1" when (trunc_ln566_fu_195_p1 = ap_const_lv63_0) else "0";
    icmp_ln590_1_fu_520_p2 <= "1" when (signed(sub_ln584_1_fu_514_p2) > signed(ap_const_lv12_10)) else "0";
    icmp_ln590_fu_263_p2 <= "1" when (signed(sub_ln584_fu_257_p2) > signed(ap_const_lv12_10)) else "0";
    icmp_ln591_1_fu_550_p2 <= "1" when (sub_ln584_1_fu_514_p2 = ap_const_lv12_10) else "0";
    icmp_ln591_fu_293_p2 <= "1" when (sub_ln584_fu_257_p2 = ap_const_lv12_10) else "0";
    icmp_ln594_1_fu_560_p2 <= "1" when (unsigned(select_ln590_1_fu_538_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln594_fu_303_p2 <= "1" when (unsigned(select_ln590_fu_281_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln612_1_fu_576_p2 <= "1" when (tmp_8_fu_566_p4 = ap_const_lv7_0) else "0";
    icmp_ln612_fu_319_p2 <= "1" when (tmp_4_fu_309_p4 = ap_const_lv7_0) else "0";

    matrixC_buffer_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, matrixC_buffer_V_addr_reg_728, matrixC_buffer_V_addr_1_reg_813)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                matrixC_buffer_V_address0 <= matrixC_buffer_V_addr_1_reg_813;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                matrixC_buffer_V_address0 <= matrixC_buffer_V_addr_reg_728;
            else 
                matrixC_buffer_V_address0 <= "XXXX";
            end if;
        else 
            matrixC_buffer_V_address0 <= "XXXX";
        end if; 
    end process;


    matrixC_buffer_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, matrixC_buffer_V_addr_reg_728, zext_ln120_fu_639_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            matrixC_buffer_V_address1 <= zext_ln120_fu_639_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            matrixC_buffer_V_address1 <= matrixC_buffer_V_addr_reg_728;
        else 
            matrixC_buffer_V_address1 <= "XXXX";
        end if; 
    end process;


    matrixC_buffer_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            matrixC_buffer_V_ce0 <= ap_const_logic_1;
        else 
            matrixC_buffer_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    matrixC_buffer_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            matrixC_buffer_V_ce1 <= ap_const_logic_1;
        else 
            matrixC_buffer_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    matrixC_buffer_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, add_ln712_fu_441_p2, add_ln712_1_fu_691_p2)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                matrixC_buffer_V_d0 <= add_ln712_1_fu_691_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                matrixC_buffer_V_d0 <= add_ln712_fu_441_p2;
            else 
                matrixC_buffer_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            matrixC_buffer_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    matrixC_buffer_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, tmp_5_reg_724, tmp_9_reg_774)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_9_reg_774 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_5_reg_724 = ap_const_lv1_0)))) then 
            matrixC_buffer_V_we0 <= ap_const_logic_1;
        else 
            matrixC_buffer_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln591_1_fu_616_p2 <= (icmp_ln591_1_fu_550_p2 or icmp_ln580_1_fu_508_p2);
    or_ln591_fu_359_p2 <= (icmp_ln591_fu_293_p2 or icmp_ln580_fu_251_p2);
    p_Result_4_1_fu_464_p4 <= bitcast_ln709_1_fu_448_p1(62 downto 52);
    p_Result_4_fu_207_p4 <= bitcast_ln709_fu_191_p1(62 downto 52);
    select_ln579_1_fu_500_p3 <= 
        sub_ln494_1_fu_494_p2 when (tmp_6_fu_456_p3(0) = '1') else 
        zext_ln578_1_fu_490_p1;
    select_ln579_fu_243_p3 <= 
        sub_ln494_fu_237_p2 when (tmp_1_fu_199_p3(0) = '1') else 
        zext_ln578_fu_233_p1;
    select_ln580_1_fu_684_p3 <= 
        ap_const_lv32_0 when (icmp_ln580_1_reg_788(0) = '1') else 
        select_ln590_3_fu_678_p3;
    select_ln580_fu_434_p3 <= 
        ap_const_lv32_0 when (icmp_ln580_reg_739(0) = '1') else 
        select_ln590_2_fu_428_p3;
    select_ln590_1_fu_538_p3 <= 
        add_ln590_1_fu_526_p2 when (icmp_ln590_1_fu_520_p2(0) = '1') else 
        sub_ln590_1_fu_532_p2;
    select_ln590_2_fu_428_p3 <= 
        select_ln594_fu_421_p3 when (and_ln590_reg_759(0) = '1') else 
        select_ln591_reg_754;
    select_ln590_3_fu_678_p3 <= 
        select_ln594_1_fu_671_p3 when (and_ln590_1_reg_808(0) = '1') else 
        select_ln591_1_reg_803;
    select_ln590_fu_281_p3 <= 
        add_ln590_fu_269_p2 when (icmp_ln590_fu_263_p2(0) = '1') else 
        sub_ln590_fu_275_p2;
    select_ln591_1_fu_608_p3 <= 
        trunc_ln592_1_fu_556_p1 when (and_ln591_1_fu_602_p2(0) = '1') else 
        select_ln612_1_fu_588_p3;
    select_ln591_fu_351_p3 <= 
        trunc_ln592_fu_299_p1 when (and_ln591_fu_345_p2(0) = '1') else 
        select_ln612_fu_331_p3;
    select_ln594_1_fu_671_p3 <= 
        trunc_ln595_1_fu_652_p1 when (icmp_ln594_1_reg_798(0) = '1') else 
        select_ln597_1_fu_663_p3;
    select_ln594_fu_421_p3 <= 
        trunc_ln595_fu_402_p1 when (icmp_ln594_reg_749(0) = '1') else 
        select_ln597_fu_413_p3;
    select_ln597_1_fu_663_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_7_fu_656_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln597_fu_413_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_3_fu_406_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln612_1_fu_588_p3 <= 
        shl_ln613_1_fu_582_p2 when (icmp_ln612_1_fu_576_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln612_fu_331_p3 <= 
        shl_ln613_fu_325_p2 when (icmp_ln612_fu_319_p2(0) = '1') else 
        ap_const_lv32_0;
        sext_ln591_1_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln590_1_fu_538_p3),32));

        sext_ln591_fu_289_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln590_fu_281_p3),32));

    shl_ln613_1_fu_582_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln592_1_fu_556_p1),to_integer(unsigned('0' & sext_ln591_1_fu_546_p1(31-1 downto 0)))));
    shl_ln613_fu_325_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln592_fu_299_p1),to_integer(unsigned('0' & sext_ln591_fu_289_p1(31-1 downto 0)))));
    sub_ln494_1_fu_494_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln578_1_fu_490_p1));
    sub_ln494_fu_237_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln578_fu_233_p1));
    sub_ln584_1_fu_514_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln494_1_fu_474_p1));
    sub_ln584_fu_257_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln494_fu_217_p1));
    sub_ln590_1_fu_532_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(sub_ln584_1_fu_514_p2));
    sub_ln590_fu_275_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(sub_ln584_fu_257_p2));
    tmp_1_fu_199_p3 <= bitcast_ln709_fu_191_p1(63 downto 63);
    tmp_2_fu_482_p3 <= (ap_const_lv1_1 & trunc_ln574_1_fu_478_p1);
    tmp_3_fu_406_p3 <= fifoCalcMatrixC_i_0_V_read_reg_714(31 downto 31);
    tmp_4_fu_309_p4 <= select_ln590_fu_281_p3(11 downto 5);
    tmp_5_fu_178_p3 <= fifoMatrixCIdx_i_0_V_dout(15 downto 15);
    tmp_6_fu_456_p3 <= bitcast_ln709_1_fu_448_p1(63 downto 63);
    tmp_7_fu_656_p3 <= fifoCalcMatrixC_i_1_V_read_reg_764(31 downto 31);
    tmp_8_fu_566_p4 <= select_ln590_1_fu_538_p3(11 downto 5);
    tmp_9_fu_382_p3 <= fifoMatrixCIdx_i_1_V_dout(15 downto 15);
    tmp_fu_225_p3 <= (ap_const_lv1_1 & trunc_ln574_fu_221_p1);
    trunc_ln120_fu_390_p1 <= fifoMatrixCIdx_i_1_V_dout(4 - 1 downto 0);
    trunc_ln566_1_fu_452_p1 <= bitcast_ln709_1_fu_448_p1(63 - 1 downto 0);
    trunc_ln566_fu_195_p1 <= bitcast_ln709_fu_191_p1(63 - 1 downto 0);
    trunc_ln574_1_fu_478_p1 <= bitcast_ln709_1_fu_448_p1(52 - 1 downto 0);
    trunc_ln574_fu_221_p1 <= bitcast_ln709_fu_191_p1(52 - 1 downto 0);
    trunc_ln592_1_fu_556_p1 <= select_ln579_1_fu_500_p3(32 - 1 downto 0);
    trunc_ln592_fu_299_p1 <= select_ln579_fu_243_p3(32 - 1 downto 0);
    trunc_ln595_1_fu_652_p1 <= ashr_ln595_1_fu_647_p2(32 - 1 downto 0);
    trunc_ln595_fu_402_p1 <= ashr_ln595_fu_397_p2(32 - 1 downto 0);
    xor_ln120_fu_634_p2 <= (trunc_ln120_reg_778 xor ap_const_lv4_8);
    xor_ln580_1_fu_596_p2 <= (icmp_ln580_1_fu_508_p2 xor ap_const_lv1_1);
    xor_ln580_fu_339_p2 <= (icmp_ln580_fu_251_p2 xor ap_const_lv1_1);
    xor_ln591_1_fu_622_p2 <= (or_ln591_1_fu_616_p2 xor ap_const_lv1_1);
    xor_ln591_fu_365_p2 <= (or_ln591_fu_359_p2 xor ap_const_lv1_1);
    zext_ln120_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln120_fu_634_p2),64));
    zext_ln494_1_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_4_1_fu_464_p4),12));
    zext_ln494_fu_217_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_4_fu_207_p4),12));
    zext_ln573_fu_186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fifoMatrixCIdx_i_0_V_dout),64));
    zext_ln578_1_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_482_p3),54));
    zext_ln578_fu_233_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_225_p3),54));
    zext_ln595_1_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln591_1_reg_793),54));
    zext_ln595_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln591_reg_744),54));
end behav;
